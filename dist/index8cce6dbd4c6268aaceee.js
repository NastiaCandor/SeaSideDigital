(()=>{"use strict";const t="nastiacandor-todo";(new class{constructor(){this.form=document.querySelector(".todo__form"),this.list=document.querySelector(".todo__list"),this.filters=document.querySelectorAll(".todo__filter-input"),this.storage=this.restoreFromLocalStorage(),this.currList="all"}init(){this.activateForm(),this.activateList(),this.activateFilter()}activateForm(){this.form.addEventListener("submit",(t=>{t.preventDefault();const e=new FormData(this.form),s={};e.forEach((function(t,e){s[e]=t})),s.state="active",s.id=this.storage.length>0?this.storage[this.storage.length-1].id+1:0,"done"!==this.currList&&this.addTaskToDOM(s),this.addTaskToLocalStorrage(s),this.form.reset()})),this.adjustTextarea()}activateFilter(){this.filters.forEach((t=>{t.addEventListener("click",(()=>{if(this.clearList(),"all"===t.value)this.fillList(this.storage),this.currList="all";else{this.currList=t.value;const e=this.storage.filter((e=>e.state===t.value));this.fillList(e)}}))}))}addTaskToLocalStorrage(t){this.storage.push(t),this.updateLocalStorage()}adjustTextarea(){document.querySelector(".todo__input-desc").addEventListener("keydown",(function(){this.scrollTop>0&&(this.style.height=this.scrollHeight+"px")}))}addTaskToDOM(t){const e=`\n      <div class="todo__task" data-task-state="${t.state}" id="${t.id}">\n        <input type="checkbox" class="todo__task-state" ${"done"===t.state?"checked":""}>\n        <div class="todo__task-text">\n          <p class="todo__task-title tl3">${t.taskTitle}</p>\n          <p class="todo__task-desc txt20">${t.taskDesc.replaceAll("\n","<br>")}</p>\n        </div>\n        <button class="todo__task-remove tl3">x</button>\n      </div>\n    `;this.list.innerHTML+=e}activateList(){this.list.addEventListener("click",(t=>{const e=t.target;if(e.classList.contains("todo__task-state")){const t=e.closest(".todo__task"),s=t.getAttribute("id"),a=e.checked?"done":"active";e.checked?e.setAttribute("checked",""):e.removeAttribute("checked"),t.setAttribute("data-task-state",a),this.updateTaskStateStorage(Number(s),a)}if(e.classList.contains("todo__task-remove")){const t=e.closest(".todo__task");t.remove();const s=t.getAttribute("id");this.removeFromLocalStorage(Number(s))}})),this.fillList(this.storage)}updateTaskStateStorage(t,e){this.storage.forEach((s=>{s.id===t&&(s.state=e)})),this.updateLocalStorage()}removeFromLocalStorage(t){this.storage=this.storage.filter((e=>e.id!==t)),this.updateLocalStorage()}restoreFromLocalStorage(){const e=localStorage.getItem(t);return null===e?[]:JSON.parse(e)}fillList(t){t.forEach((t=>{this.addTaskToDOM(t)}))}clearList(){this.list.innerHTML=""}updateLocalStorage(){localStorage.setItem(t,JSON.stringify(this.storage))}}).init()})();